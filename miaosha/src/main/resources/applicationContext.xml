<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.dj">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Spring的配置文件，这里主要配置和业务逻辑有关的 -->
	<!--=================== 数据源，事务控制，xxx ================-->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- c3p0连接池私有属性 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="10"/>
		<!-- 关闭链接后不自动commit -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取链接超时时间 -->
		<property name="checkoutTimeout" value="1000"/>

	</bean>

	<!--================== 配置和MyBatis的整合=============== -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.dj.dao"></property>
	</bean>
	
	<!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<!--<constructor-arg name="executorType" value="BATCH"></constructor-arg>-->
	</bean>
	<!--=======扫描Service包下所有使用注解的类型========  -->
    <context:component-scan base-package="com.dj.service"/>
	<!-- ===============事务控制的配置 ================-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--控制住数据源  -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<!-- 配置基于注解的事务
	     默认使用注解来管理事务行为
	 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  -->
	<!--<aop:config>-->
		<!--&lt;!&ndash; 切入点表达式 &ndash;&gt;-->
		<!--<aop:pointcut expression="execution(* com.dj.service..*(..))" id="txPoint"/>-->
		<!--&lt;!&ndash; 配置事务增强 &ndash;&gt;-->
		<!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>-->
	<!--</aop:config>-->
	<!---->
	<!--&lt;!&ndash;配置事务增强，事务如何切入  &ndash;&gt;-->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
		<!--<tx:attributes>-->
			<!--&lt;!&ndash; 所有方法都是事务方法 &ndash;&gt;-->
			<!--<tx:method name="*"/>-->
			<!--&lt;!&ndash;以get开始的所有方法  &ndash;&gt;-->
			<!--<tx:method name="get*" read-only="true"/>-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->
	
	<!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
	<!-- RedisDao,构造注入 -->
	<bean id="redisDao" class="com.dj.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
	
</beans>
